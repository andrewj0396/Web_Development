Goals
-------------------

This project aims to create a simple web based todo list using Python, PHP, and HTML. 
The main pieces of this project are an HTML file containing PHP and a Python script. 
Ideally, the todo list will be a simple web page where the user can enter data using a 
php form and then remove objects on the list by clicking the delete button next to 
those objects.


The HTML and PHP
-------------------

The HTML is fairly simple, containing only a web form with a number of list items. 
These are the ToDo's of the project. Each todo list object is a submit $_POST button, 
labeled remove. These buttons used to fire off a section of PHP code which invokes the 
python html_editor script.

The PHP, as mentioned above, listens for a $_POST submission to the HTML web form and 
then calls the python script with the appropriate option. Specifically, the PHP code 
first defines a variable $test and assigns it the value of the POST to the web form. The 
PHP code then tests if the value of a particular list item is equal to the string, 
"remove." If it is that means the button has been pressed and so the PHP then uses the 
"shell_exec()" function to call the python script with the appropriate argument option.


The Python
-------------------

The python script named html_editor.py edits the content of the index.php file directly 
based off of the todo's which are stored in the todo's.txt file. The python script does 
this by reading the contents of todo's text file into a list and reading the contents 
of the index.php file into a string. If the index.php file already has any list items 
in it the python script removes those items and replaces them with an html comment 
which simply reads, "<!--list-->." Next the python script takes the python list of 
todo's and formats them as a string containing a set of html list items. Finally the 
Python script replaces the html "<!--list-->" comment with the formatted html list 
items and then writes the whole "page_text" string back into the index.php file.


The Project So Far
-------------------

The project at this point is a long way from completion. At this stage the only 
functional piece of the project is the ability of the python script to edit the html 
file and insert the list items from the todo list file and this will likely need to be 
rewritten using a proper HTML parser (likely beautiful soup) after the prototyping 
phase. 

At this point I'm still having difficulty getting the python script to remove the list 
items after they've been marked for deletion. The issue is that the page does not 
update after the user has submitted their input. Then with the user refreshes the page 
the form is resubmitted and so two of the list items become marked for deletion. The 
solution is to have the page updated after every submission however I do not currently 
know how to do this using PHP. An alternative fix could be to have the python script 
check that it is deleting the write item but this is difficult to do since the only 
reference for this is the text file containing the todo item and the index file. Both of 
which the python script is supposed to update. And this is only with the submission of 
one change (which is the submit button on the first list item). I still have yet to 
integrate all of the other button for every other submit button. 

After the buttons are integrated and the removal of items from the to do list based off 
of input from the page is complete I'll start work on taking user input from a text box 
for the creation of new list items. At this point I may abandon the text file entirely 
and simply use the items stored in the html file itself. Although doing this would 
require significant rewrites. After adding the ability for user text input and working 
out the deletion of list items the project's prototype will be completed. Then I may 
rewrite the project using the beautiful soup module to make the html parsing easier. 
Finally, I'll add some CSS and bells and whistles and call it completed. 


Update July 26th 2019
-------------------

I've accomplished two things today. First I worked out the communication between the PHP code and 
the Python script. Instead of working with the existing html_editor.py script I created a 
different script called test.py and set it up to take a number of command line arguments. Then 
when PHP calls the script it passes the values of the checked boxes as the arguments to the 
python script. I've also made it so that the PHP script (now called "submission.php") sends the 
string "0" if the checked box value is a null (ie. if the box was not checked). Just for testing 
purposes the test.py script logs the arguments to a file called file.txt. And that all works!

The second major thing I accomplished today was the form re-submission issue. The problem was that 
when using the POST method the form would be submitted twice. First when submit was clicked and 
then again when the browser refresh button was clicked. This was annoying! I fixed it by putting 
all the PHP code in a different file (called submission.php) and then having that file 301 
redirect back to the index.html page. Now when the form is submitted the PHP page is called and 
run and then 301 is implemented. The server log looks like this:

[Fri Jul 26 06:08:33 2019] 127.0.0.1:49748 [301]: /submission.php
[Fri Jul 26 06:08:33 2019] 127.0.0.1:49752 [200]: /index.html

This is awesome because it means I over came two of the big challenges I was having with the PHP 
side of this project! Now all that's left is to stitch the two sides of this project together. But 
that'll have to wait for another day. 
